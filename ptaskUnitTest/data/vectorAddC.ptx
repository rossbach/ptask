	.version 1.4
	.target sm_10, map_f64_to_f32
	// compiled with C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\\bin/../open64/lib//be.exe
	// nvopencc 3.2 built on 2010-11-04

	//-----------------------------------------------------------
	// Compiling C:/Users/crossbac/AppData/Local/Temp/tmpxft_00002094_00000000-11_vectorAdd.cpp3.i (C:/Users/crossbac/AppData/Local/Temp/ccBI#.a07360)
	//-----------------------------------------------------------

	//-----------------------------------------------------------
	// Options:
	//-----------------------------------------------------------
	//  Target:ptx, ISA:sm_10, Endian:little, Pointer Size:64
	//  -O3	(Optimization level)
	//  -g0	(Debug level)
	//  -m2	(Report advisories)
	//-----------------------------------------------------------

	.file	1	"C:/Users/crossbac/AppData/Local/Temp/tmpxft_00002094_00000000-10_vectorAdd.cudafe2.gpu"
	.file	2	"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\INCLUDE\crtdefs.h"
	.file	3	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin/../include\crt/device_runtime.h"
	.file	4	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin/../include\host_defines.h"
	.file	5	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin/../include\builtin_types.h"
	.file	6	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\device_types.h"
	.file	7	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\driver_types.h"
	.file	8	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\surface_types.h"
	.file	9	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\texture_types.h"
	.file	10	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\vector_types.h"
	.file	11	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\builtin_types.h"
	.file	12	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\host_defines.h"
	.file	13	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin/../include\device_launch_parameters.h"
	.file	14	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\crt\storage_class.h"
	.file	15	"C:\Program Files (x86)\Microsoft Visual Studio 9.0\VC\INCLUDE\time.h"
	.file	16	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\texture_fetch_functions.h"
	.file	17	"C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v3.2\bin/../include\common_functions.h"
	.file	18	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\math_functions.h"
	.file	19	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\math_constants.h"
	.file	20	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\device_functions.h"
	.file	21	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_11_atomic_functions.h"
	.file	22	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_12_atomic_functions.h"
	.file	23	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_13_double_functions.h"
	.file	24	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_20_atomic_functions.h"
	.file	25	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\sm_20_intrinsics.h"
	.file	26	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\surface_functions.h"
	.file	27	"c:\program files\nvidia gpu computing toolkit\cuda\v3.2\include\math_functions_dbl_ptx1.h"
	.file	28	"c:/SVC/Dandelion/accelerators/PTaskUnitTest/vectorAdd.cu"


	.entry VecAdd (
		.param .u64 __cudaparm_VecAdd_A,
		.param .u64 __cudaparm_VecAdd_B,
		.param .u64 __cudaparm_VecAdd_C,
		.param .s32 __cudaparm_VecAdd_N)
	{
	.reg .u16 %rh<4>;
	.reg .u32 %r<6>;
	.reg .u64 %rd<6>;
	.reg .f32 %f<3>;
	.reg .pred %p<3>;
	.loc	28	21	0
$LDWbegin_VecAdd:
	mov.u16 	%rh1, %ctaid.x;
	mov.u16 	%rh2, %ntid.x;
	mul.wide.u16 	%r1, %rh1, %rh2;
	cvt.u32.u16 	%r2, %tid.x;
	add.u32 	%r3, %r2, %r1;
	ld.param.s32 	%r4, [__cudaparm_VecAdd_N];
	setp.le.s32 	%p1, %r4, %r3;
	@%p1 bra 	$Lt_0_1026;
	.loc	28	24	0
	cvt.rn.f32.s32 	%f1, %r3;
	ld.param.u64 	%rd1, [__cudaparm_VecAdd_C];
	cvt.s64.s32 	%rd2, %r3;
	mul.wide.s32 	%rd3, %r3, 4;
	add.u64 	%rd4, %rd1, %rd3;
	st.global.f32 	[%rd4+0], %f1;
$Lt_0_1026:
	.loc	28	25	0
	exit;
$LDWend_VecAdd:
	} // VecAdd

